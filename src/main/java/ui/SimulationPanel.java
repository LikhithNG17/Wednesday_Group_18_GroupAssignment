/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package ui;

import java.awt.CardLayout;
import java.util.ArrayList;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;
import model.ProductManagement.Product;
import model.Supplier.Supplier;

/**
 *
 * @author hp
 */
public class SimulationPanel extends javax.swing.JPanel {
       private JPanel workArea;
       private Supplier supplier;

    /**
     * Creates new form SimulationPanel
     */
    public SimulationPanel(JPanel workArea, Supplier supplier) {
        initComponents();
        this.workArea = workArea;
        this.supplier = supplier;
        runSimulation();  // Add this method to perform your simulation
    }
    private void runSimulation() {
    DefaultTableModel model = (DefaultTableModel) ResultTable.getModel();
    model.setRowCount(0);
    
    if (supplier != null && supplier.getProductCatalog() != null) {
        ArrayList<Product> products = supplier.getProductCatalog().getProducts();
        for (Product p : products) {
            double previousPrice = p.getPreviousPrice() > 0 ? p.getPreviousPrice() : p.getTargetPrice();
            double adjustedPrice = p.getTargetPrice();  // Current price after adjustments
            double projectedRevenue = adjustedPrice * (p.getSalesVolume() * 0.95);
            double profitMargin = projectedRevenue - (p.getFloorPrice() * p.getSalesVolume());
            
            Object[] row = {
                p.getName(),
                String.format("%.2f", previousPrice),
                String.format("%.2f", adjustedPrice),
                String.format("%.2f", projectedRevenue),
                String.format("%.2f", profitMargin)
            };
            model.addRow(row);
        }
    }
    
}
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        ResultLabel = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        ResultTable = new javax.swing.JTable();
        btnBack = new javax.swing.JButton();
        btnProfitMaximization = new javax.swing.JButton();

        setBackground(new java.awt.Color(204, 204, 204));

        ResultLabel.setFont(new java.awt.Font("Mali", 1, 36)); // NOI18N
        ResultLabel.setText("Simulation Result");

        ResultTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null}
            },
            new String [] {
                "Product", "Previous Price", "Adjusted Price", "Projected Sales Revenue", "Profit Margin"
            }
        ));
        jScrollPane1.setViewportView(ResultTable);

        btnBack.setBackground(new java.awt.Color(204, 204, 255));
        btnBack.setText("< Back");
        btnBack.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBackActionPerformed(evt);
            }
        });

        btnProfitMaximization.setBackground(new java.awt.Color(204, 204, 255));
        btnProfitMaximization.setFont(new java.awt.Font("Mali", 0, 18)); // NOI18N
        btnProfitMaximization.setText("Profit Maximization");
        btnProfitMaximization.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnProfitMaximizationActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(btnBack, javax.swing.GroupLayout.PREFERRED_SIZE, 96, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(148, 148, 148)
                        .addComponent(ResultLabel))
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 759, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(276, 276, 276)
                        .addComponent(btnProfitMaximization, javax.swing.GroupLayout.PREFERRED_SIZE, 212, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(20, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(btnBack, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(ResultLabel))
                .addGap(16, 16, 16)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 275, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(59, 59, 59)
                .addComponent(btnProfitMaximization)
                .addContainerGap(253, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void btnBackActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBackActionPerformed
        // TODO add your handling code here:
        workArea.remove(this);
        CardLayout layout = (CardLayout) workArea.getLayout();
        layout.previous(workArea);
         
       
    }//GEN-LAST:event_btnBackActionPerformed

    private void btnProfitMaximizationActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnProfitMaximizationActionPerformed
        // TODO add your handling code here:
        try {
        // Create ProfitMaximizationJPanel with workArea and supplier
        ProfitMaximizationJPanel profitMaxPanel = new ProfitMaximizationJPanel(workArea, supplier);
        
        // Add panel to workArea
        workArea.add("ProfitMaximizationPanel", profitMaxPanel);
        
        // Show the profit maximization panel
        CardLayout cardLayout = (CardLayout) workArea.getLayout();
        cardLayout.show(workArea, "ProfitMaximizationPanel");
        
    } catch (Exception e) {
        System.err.println("Error showing profit maximization panel: " + e.getMessage());
        e.printStackTrace();
        JOptionPane.showMessageDialog(this, "Error opening profit maximization panel");
    }

        
    }//GEN-LAST:event_btnProfitMaximizationActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel ResultLabel;
    private javax.swing.JTable ResultTable;
    private javax.swing.JButton btnBack;
    private javax.swing.JButton btnProfitMaximization;
    private javax.swing.JScrollPane jScrollPane1;
    // End of variables declaration//GEN-END:variables
}
