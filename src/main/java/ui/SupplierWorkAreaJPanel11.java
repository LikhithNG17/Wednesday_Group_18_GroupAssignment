/*
 * ProductManagerWorkAreaJPanel.java
 *
 * 
 */
package ui;

import model.Supplier.Supplier;
import java.awt.CardLayout;
import java.awt.Component;
import java.awt.Window;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.SwingUtilities;
import javax.swing.table.DefaultTableModel;
import model.Business.Business;
import model.ProductManagement.Product;
import model.ProductManagement.ProductCatalog;
import model.Supplier.Supplier;
import model.Supplier.SupplierDirectory;

/**
 *
 * @author gagan  
 */
public class SupplierWorkAreaJPanel11 extends javax.swing.JPanel {

    JPanel mainWorkArea;
    Supplier supplier;


    /**
     * Creates new form ProductManagerWorkAreaJPanel
     */
    public SupplierWorkAreaJPanel11(JPanel mainWorkArea, Supplier supplier) {

        initComponents();
        this.mainWorkArea = mainWorkArea;
        this.supplier = supplier;
        
        if (supplier != null) lblWelcome.setText("Welcome, "+ supplier.getName());
        refreshUI();

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    
    public void refreshUI() {
        if (supplier != null) {
            lblWelcome.setText("Welcome, " + supplier.getName());
        }    
    }
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        splitPane = new javax.swing.JSplitPane();
        menuBar = new javax.swing.JPanel();
        btnLogOut = new javax.swing.JButton();
        lblWelcome = new javax.swing.JLabel();
        btnPricePerformance = new javax.swing.JButton();
        btnAdjustPrice = new javax.swing.JButton();
        btnFinalReport = new javax.swing.JButton();
        workArea = new javax.swing.JPanel();

        splitPane.setDividerLocation(50);
        splitPane.setOrientation(javax.swing.JSplitPane.VERTICAL_SPLIT);

        menuBar.setBackground(new java.awt.Color(204, 204, 204));

        btnLogOut.setBackground(new java.awt.Color(204, 204, 255));
        btnLogOut.setFont(new java.awt.Font("Mali", 0, 14)); // NOI18N
        btnLogOut.setText("Log Out");
        btnLogOut.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnLogOutActionPerformed(evt);
            }
        });

        lblWelcome.setFont(new java.awt.Font("Mali", 0, 14)); // NOI18N
        lblWelcome.setText("<WelcomeMsg>");

        btnPricePerformance.setBackground(new java.awt.Color(204, 204, 255));
        btnPricePerformance.setFont(new java.awt.Font("Mali", 0, 14)); // NOI18N
        btnPricePerformance.setText("Browse Price Performance");
        btnPricePerformance.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnPricePerformanceActionPerformed(evt);
            }
        });

        btnAdjustPrice.setBackground(new java.awt.Color(204, 204, 255));
        btnAdjustPrice.setFont(new java.awt.Font("Mali", 0, 14)); // NOI18N
        btnAdjustPrice.setText("Price Adjustment");
        btnAdjustPrice.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAdjustPriceActionPerformed(evt);
            }
        });

        btnFinalReport.setBackground(new java.awt.Color(204, 204, 255));
        btnFinalReport.setFont(new java.awt.Font("Mali", 0, 14)); // NOI18N
        btnFinalReport.setText("Final Report");
        btnFinalReport.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnFinalReportActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout menuBarLayout = new javax.swing.GroupLayout(menuBar);
        menuBar.setLayout(menuBarLayout);
        menuBarLayout.setHorizontalGroup(
            menuBarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, menuBarLayout.createSequentialGroup()
                .addGap(19, 19, 19)
                .addComponent(lblWelcome, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGap(18, 18, 18)
                .addComponent(btnPricePerformance)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnAdjustPrice)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnFinalReport)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(btnLogOut)
                .addGap(191, 191, 191))
        );
        menuBarLayout.setVerticalGroup(
            menuBarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, menuBarLayout.createSequentialGroup()
                .addContainerGap(19, Short.MAX_VALUE)
                .addGroup(menuBarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblWelcome)
                    .addComponent(btnPricePerformance)
                    .addComponent(btnAdjustPrice)
                    .addComponent(btnFinalReport)
                    .addComponent(btnLogOut))
                .addContainerGap())
        );

        splitPane.setTopComponent(menuBar);

        workArea.setBackground(new java.awt.Color(204, 204, 204));
        workArea.setLayout(new java.awt.CardLayout());
        splitPane.setRightComponent(workArea);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 800, Short.MAX_VALUE)
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(layout.createSequentialGroup()
                    .addGap(0, 0, Short.MAX_VALUE)
                    .addComponent(splitPane, javax.swing.GroupLayout.PREFERRED_SIZE, 800, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGap(0, 0, Short.MAX_VALUE)))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 600, Short.MAX_VALUE)
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(layout.createSequentialGroup()
                    .addGap(0, 0, Short.MAX_VALUE)
                    .addComponent(splitPane, javax.swing.GroupLayout.PREFERRED_SIZE, 600, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGap(0, 0, Short.MAX_VALUE)))
        );
    }// </editor-fold>//GEN-END:initComponents
    private void btnPricePerformanceActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnPricePerformanceActionPerformed
        // TODO add your handling code here:
        PricePerformanceJPanel ppjp = new PricePerformanceJPanel(workArea, supplier);
        workArea.add("PricePerformanceJPanel", ppjp);
        CardLayout layout = (CardLayout) workArea.getLayout();
        layout.next(workArea);
    }//GEN-LAST:event_btnPricePerformanceActionPerformed

    private void btnAdjustPriceActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAdjustPriceActionPerformed
        // TODO add your handling code here:
        PriceAdjustmentJPanel priceAdjustPanel = new PriceAdjustmentJPanel(workArea, supplier);
    workArea.add("PriceAdjustmentPanel", priceAdjustPanel);
    CardLayout layout = (CardLayout) workArea.getLayout();
    layout.next(workArea);
    }//GEN-LAST:event_btnAdjustPriceActionPerformed

    private void btnLogOutActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnLogOutActionPerformed
        // TODO add your handling code here:
mainWorkArea.remove(this);
    
    // Create new login frame with the same supplier directory from PricingModel
    Business business = new Business("Pricing Analytics System");
    SupplierDirectory supplierDirectory = business.getSupplierDirectory();
    
    // Generate the sample data again
    generateSampleData(business, supplierDirectory);
    
    // Create new login frame with the populated supplier directory
    LoginMainJFrame loginFrame = new LoginMainJFrame(mainWorkArea, supplierDirectory);
    loginFrame.setLocationRelativeTo(null);
    loginFrame.setVisible(true);
    
    // Find and dispose the current window
    Window window = SwingUtilities.getWindowAncestor(this);
    if (window != null) {
        window.dispose();
    }
    }//GEN-LAST:event_btnLogOutActionPerformed

    private void btnFinalReportActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnFinalReportActionPerformed
        // TODO add your handling code here:
        try {
        FinalReportJPanel finalReportPanel = new FinalReportJPanel(workArea, supplier);
        workArea.add("FinalReportPanel", finalReportPanel);
        CardLayout cardLayout = (CardLayout) workArea.getLayout();
        cardLayout.show(workArea, "FinalReportPanel");
    } catch (Exception e) {
        System.err.println("Error showing final report: " + e.getMessage());
        e.printStackTrace();
        JOptionPane.showMessageDialog(this, "Error opening final report");
    }
    }//GEN-LAST:event_btnFinalReportActionPerformed
    private void generateSampleData(Business business, SupplierDirectory supplierDirectory) {
    String[] supplierNames = {"Apple", "Samsung", "Microsoft", "Google", "Amazon"};
    String[] productTypes = {"Phone", "Laptop", "Tablet", "Watch", "Speaker", 
                           "Headphones", "Camera", "TV", "Console", "Router"};
    
    // Create suppliers with products
    for (String supplierName : supplierNames) {
        System.out.println("Creating supplier: " + supplierName);
        Supplier supplier = supplierDirectory.newSupplier(supplierName);
        ProductCatalog catalog = supplier.getProductCatalog();
        
        // Create products for each supplier
        for (int i = 0; i < 10; i++) {
            String productName = productTypes[i];
            System.out.println("Creating product: " + productName + " for " + supplierName);
            catalog.newProduct(productName, 800, 1000, 1200);
        }
    }
}
    public String toString() {
        return "Supplier";
    }
    
    @Override
   public void addNotify() {
        super.addNotify();
        refreshUI();    
}



    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAdjustPrice;
    private javax.swing.JButton btnFinalReport;
    private javax.swing.JButton btnLogOut;
    private javax.swing.JButton btnPricePerformance;
    private javax.swing.JLabel lblWelcome;
    private javax.swing.JPanel menuBar;
    private javax.swing.JSplitPane splitPane;
    private javax.swing.JPanel workArea;
    // End of variables declaration//GEN-END:variables
    
}
